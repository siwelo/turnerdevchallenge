//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TitlesModel1", "Award_FK_Award_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Title), "Award", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.Award), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Genre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Genre), "TitleGenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.TitleGenre), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "OtherName_FK_OtherName_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(turnerdevchallenge.Models.Title), "OtherName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.OtherName), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Participant", "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Participant), "TitleParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.TitleParticipant), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "StoryLine_FK_StoryLine_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Title), "StoryLine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.StoryLine), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Title), "TitleGenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.TitleGenre), true)]
[assembly: EdmRelationshipAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(turnerdevchallenge.Models.Title), "TitleParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(turnerdevchallenge.Models.TitleParticipant), true)]

#endregion

namespace turnerdevchallenge.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TitlesEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TitlesEntities1 object using the connection string found in the 'TitlesEntities1' section of the application configuration file.
        /// </summary>
        public TitlesEntities1() : base("name=TitlesEntities1", "TitlesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TitlesEntities1 object.
        /// </summary>
        public TitlesEntities1(string connectionString) : base(connectionString, "TitlesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TitlesEntities1 object.
        /// </summary>
        public TitlesEntities1(EntityConnection connection) : base(connection, "TitlesEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Award> Awards
        {
            get
            {
                if ((_Awards == null))
                {
                    _Awards = base.CreateObjectSet<Award>("Awards");
                }
                return _Awards;
            }
        }
        private ObjectSet<Award> _Awards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherName> OtherNames
        {
            get
            {
                if ((_OtherNames == null))
                {
                    _OtherNames = base.CreateObjectSet<OtherName>("OtherNames");
                }
                return _OtherNames;
            }
        }
        private ObjectSet<OtherName> _OtherNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Participant> Participants
        {
            get
            {
                if ((_Participants == null))
                {
                    _Participants = base.CreateObjectSet<Participant>("Participants");
                }
                return _Participants;
            }
        }
        private ObjectSet<Participant> _Participants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoryLine> StoryLines
        {
            get
            {
                if ((_StoryLines == null))
                {
                    _StoryLines = base.CreateObjectSet<StoryLine>("StoryLines");
                }
                return _StoryLines;
            }
        }
        private ObjectSet<StoryLine> _StoryLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TitleGenre> TitleGenres
        {
            get
            {
                if ((_TitleGenres == null))
                {
                    _TitleGenres = base.CreateObjectSet<TitleGenre>("TitleGenres");
                }
                return _TitleGenres;
            }
        }
        private ObjectSet<TitleGenre> _TitleGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TitleParticipant> TitleParticipants
        {
            get
            {
                if ((_TitleParticipants == null))
                {
                    _TitleParticipants = base.CreateObjectSet<TitleParticipant>("TitleParticipants");
                }
                return _TitleParticipants;
            }
        }
        private ObjectSet<TitleParticipant> _TitleParticipants;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Awards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAwards(Award award)
        {
            base.AddObject("Awards", award);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherNames(OtherName otherName)
        {
            base.AddObject("OtherNames", otherName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Participants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParticipants(Participant participant)
        {
            base.AddObject("Participants", participant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoryLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoryLines(StoryLine storyLine)
        {
            base.AddObject("StoryLines", storyLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TitleGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitleGenres(TitleGenre titleGenre)
        {
            base.AddObject("TitleGenres", titleGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TitleParticipants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitleParticipants(TitleParticipant titleParticipant)
        {
            base.AddObject("TitleParticipants", titleParticipant);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="Award")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Award : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Award object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Award CreateAward(global::System.Int32 titleId, global::System.Int32 id)
        {
            Award award = new Award();
            award.TitleId = titleId;
            award.Id = id;
            return award;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AwardWon
        {
            get
            {
                return _AwardWon;
            }
            set
            {
                OnAwardWonChanging(value);
                ReportPropertyChanging("AwardWon");
                _AwardWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardWon");
                OnAwardWonChanged();
            }
        }
        private Nullable<global::System.Boolean> _AwardWon;
        partial void OnAwardWonChanging(Nullable<global::System.Boolean> value);
        partial void OnAwardWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AwardYear
        {
            get
            {
                return _AwardYear;
            }
            set
            {
                OnAwardYearChanging(value);
                ReportPropertyChanging("AwardYear");
                _AwardYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardYear");
                OnAwardYearChanged();
            }
        }
        private Nullable<global::System.Int32> _AwardYear;
        partial void OnAwardYearChanging(Nullable<global::System.Int32> value);
        partial void OnAwardYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Award1
        {
            get
            {
                return _Award1;
            }
            set
            {
                OnAward1Changing(value);
                ReportPropertyChanging("Award1");
                _Award1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Award1");
                OnAward1Changed();
            }
        }
        private global::System.String _Award1;
        partial void OnAward1Changing(global::System.String value);
        partial void OnAward1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AwardCompany
        {
            get
            {
                return _AwardCompany;
            }
            set
            {
                OnAwardCompanyChanging(value);
                ReportPropertyChanging("AwardCompany");
                _AwardCompany = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AwardCompany");
                OnAwardCompanyChanged();
            }
        }
        private global::System.String _AwardCompany;
        partial void OnAwardCompanyChanging(global::System.String value);
        partial void OnAwardCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "Award_FK_Award_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.Award_FK_Award_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.Award_FK_Award_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.Award_FK_Award_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TitlesModel1.Award_FK_Award_Title", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Genre CreateGenre(global::System.Int32 id)
        {
            Genre genre = new Genre();
            genre.Id = id;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Genre", "TitleGenre")]
        public EntityCollection<TitleGenre> TitleGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TitleGenre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "TitleGenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TitleGenre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "TitleGenre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="OtherName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OtherName CreateOtherName(global::System.Int32 id)
        {
            OtherName otherName = new OtherName();
            otherName.Id = id;
            return otherName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TitleId;
        partial void OnTitleIdChanging(Nullable<global::System.Int32> value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleNameLanguage
        {
            get
            {
                return _TitleNameLanguage;
            }
            set
            {
                OnTitleNameLanguageChanging(value);
                ReportPropertyChanging("TitleNameLanguage");
                _TitleNameLanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleNameLanguage");
                OnTitleNameLanguageChanged();
            }
        }
        private global::System.String _TitleNameLanguage;
        partial void OnTitleNameLanguageChanging(global::System.String value);
        partial void OnTitleNameLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleNameType
        {
            get
            {
                return _TitleNameType;
            }
            set
            {
                OnTitleNameTypeChanging(value);
                ReportPropertyChanging("TitleNameType");
                _TitleNameType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleNameType");
                OnTitleNameTypeChanged();
            }
        }
        private global::System.String _TitleNameType;
        partial void OnTitleNameTypeChanging(global::System.String value);
        partial void OnTitleNameTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleNameSortable
        {
            get
            {
                return _TitleNameSortable;
            }
            set
            {
                OnTitleNameSortableChanging(value);
                ReportPropertyChanging("TitleNameSortable");
                _TitleNameSortable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleNameSortable");
                OnTitleNameSortableChanged();
            }
        }
        private global::System.String _TitleNameSortable;
        partial void OnTitleNameSortableChanging(global::System.String value);
        partial void OnTitleNameSortableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleName
        {
            get
            {
                return _TitleName;
            }
            set
            {
                OnTitleNameChanging(value);
                ReportPropertyChanging("TitleName");
                _TitleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleName");
                OnTitleNameChanged();
            }
        }
        private global::System.String _TitleName;
        partial void OnTitleNameChanging(global::System.String value);
        partial void OnTitleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "OtherName_FK_OtherName_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.OtherName_FK_OtherName_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.OtherName_FK_OtherName_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.OtherName_FK_OtherName_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TitlesModel1.OtherName_FK_OtherName_Title", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="Participant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Participant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Participant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Participant CreateParticipant(global::System.Int32 id)
        {
            Participant participant = new Participant();
            participant.Id = id;
            return participant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParticipantType
        {
            get
            {
                return _ParticipantType;
            }
            set
            {
                OnParticipantTypeChanging(value);
                ReportPropertyChanging("ParticipantType");
                _ParticipantType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParticipantType");
                OnParticipantTypeChanged();
            }
        }
        private global::System.String _ParticipantType;
        partial void OnParticipantTypeChanging(global::System.String value);
        partial void OnParticipantTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Participant", "TitleParticipant")]
        public EntityCollection<TitleParticipant> TitleParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TitleParticipant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "TitleParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TitleParticipant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "TitleParticipant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="StoryLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoryLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoryLine object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static StoryLine CreateStoryLine(global::System.Int32 titleId, global::System.Int32 id)
        {
            StoryLine storyLine = new StoryLine();
            storyLine.TitleId = titleId;
            storyLine.Id = id;
            return storyLine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "StoryLine_FK_StoryLine_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.StoryLine_FK_StoryLine_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.StoryLine_FK_StoryLine_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.StoryLine_FK_StoryLine_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TitlesModel1.StoryLine_FK_StoryLine_Title", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        public static Title CreateTitle(global::System.Int32 titleId)
        {
            Title title = new Title();
            title.TitleId = titleId;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                if (_TitleId != value)
                {
                    OnTitleIdChanging(value);
                    ReportPropertyChanging("TitleId");
                    _TitleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleId");
                    OnTitleIdChanged();
                }
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleName
        {
            get
            {
                return _TitleName;
            }
            set
            {
                OnTitleNameChanging(value);
                ReportPropertyChanging("TitleName");
                _TitleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleName");
                OnTitleNameChanged();
            }
        }
        private global::System.String _TitleName;
        partial void OnTitleNameChanging(global::System.String value);
        partial void OnTitleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleNameSortable
        {
            get
            {
                return _TitleNameSortable;
            }
            set
            {
                OnTitleNameSortableChanging(value);
                ReportPropertyChanging("TitleNameSortable");
                _TitleNameSortable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleNameSortable");
                OnTitleNameSortableChanged();
            }
        }
        private global::System.String _TitleNameSortable;
        partial void OnTitleNameSortableChanging(global::System.String value);
        partial void OnTitleNameSortableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TitleTypeId
        {
            get
            {
                return _TitleTypeId;
            }
            set
            {
                OnTitleTypeIdChanging(value);
                ReportPropertyChanging("TitleTypeId");
                _TitleTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleTypeId");
                OnTitleTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TitleTypeId;
        partial void OnTitleTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTitleTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReleaseYear
        {
            get
            {
                return _ReleaseYear;
            }
            set
            {
                OnReleaseYearChanging(value);
                ReportPropertyChanging("ReleaseYear");
                _ReleaseYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseYear");
                OnReleaseYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ReleaseYear;
        partial void OnReleaseYearChanging(Nullable<global::System.Int32> value);
        partial void OnReleaseYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProcessedDateTimeUTC
        {
            get
            {
                return _ProcessedDateTimeUTC;
            }
            set
            {
                OnProcessedDateTimeUTCChanging(value);
                ReportPropertyChanging("ProcessedDateTimeUTC");
                _ProcessedDateTimeUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessedDateTimeUTC");
                OnProcessedDateTimeUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProcessedDateTimeUTC;
        partial void OnProcessedDateTimeUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnProcessedDateTimeUTCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "Award_FK_Award_Title", "Award")]
        public EntityCollection<Award> Awards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award>("TitlesModel1.Award_FK_Award_Title", "Award");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award>("TitlesModel1.Award_FK_Award_Title", "Award", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "OtherName_FK_OtherName_Title", "OtherName")]
        public EntityCollection<OtherName> OtherNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtherName>("TitlesModel1.OtherName_FK_OtherName_Title", "OtherName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtherName>("TitlesModel1.OtherName_FK_OtherName_Title", "OtherName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "StoryLine_FK_StoryLine_Title", "StoryLine")]
        public EntityCollection<StoryLine> StoryLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StoryLine>("TitlesModel1.StoryLine_FK_StoryLine_Title", "StoryLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StoryLine>("TitlesModel1.StoryLine_FK_StoryLine_Title", "StoryLine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Title", "TitleGenre")]
        public EntityCollection<TitleGenre> TitleGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TitleGenre>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "TitleGenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TitleGenre>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "TitleGenre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Title", "TitleParticipant")]
        public EntityCollection<TitleParticipant> TitleParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TitleParticipant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "TitleParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TitleParticipant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "TitleParticipant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="TitleGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TitleGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TitleGenre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="genreId">Initial value of the GenreId property.</param>
        public static TitleGenre CreateTitleGenre(global::System.Int32 id, global::System.Int32 titleId, global::System.Int32 genreId)
        {
            TitleGenre titleGenre = new TitleGenre();
            titleGenre.Id = id;
            titleGenre.TitleId = titleId;
            titleGenre.GenreId = genreId;
            return titleGenre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                OnGenreIdChanging(value);
                ReportPropertyChanging("GenreId");
                _GenreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreId");
                OnGenreIdChanged();
            }
        }
        private global::System.Int32 _GenreId;
        partial void OnGenreIdChanging(global::System.Int32 value);
        partial void OnGenreIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Genre", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("TitlesModel1.TitleGenre_FK_TitleGenre_Genre", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleGenre_FK_TitleGenre_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TitlesModel1.TitleGenre_FK_TitleGenre_Title", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitlesModel1", Name="TitleParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TitleParticipant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TitleParticipant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        /// <param name="isKey">Initial value of the IsKey property.</param>
        /// <param name="isOnScreen">Initial value of the IsOnScreen property.</param>
        public static TitleParticipant CreateTitleParticipant(global::System.Int32 id, global::System.Int32 titleId, global::System.Int32 participantId, global::System.Boolean isKey, global::System.Boolean isOnScreen)
        {
            TitleParticipant titleParticipant = new TitleParticipant();
            titleParticipant.Id = id;
            titleParticipant.TitleId = titleId;
            titleParticipant.ParticipantId = participantId;
            titleParticipant.IsKey = isKey;
            titleParticipant.IsOnScreen = isOnScreen;
            return titleParticipant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.Int32 _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Int32 value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsKey
        {
            get
            {
                return _IsKey;
            }
            set
            {
                OnIsKeyChanging(value);
                ReportPropertyChanging("IsKey");
                _IsKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsKey");
                OnIsKeyChanged();
            }
        }
        private global::System.Boolean _IsKey;
        partial void OnIsKeyChanging(global::System.Boolean value);
        partial void OnIsKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                OnRoleTypeChanging(value);
                ReportPropertyChanging("RoleType");
                _RoleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleType");
                OnRoleTypeChanged();
            }
        }
        private global::System.String _RoleType;
        partial void OnRoleTypeChanging(global::System.String value);
        partial void OnRoleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnScreen
        {
            get
            {
                return _IsOnScreen;
            }
            set
            {
                OnIsOnScreenChanging(value);
                ReportPropertyChanging("IsOnScreen");
                _IsOnScreen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnScreen");
                OnIsOnScreenChanged();
            }
        }
        private global::System.Boolean _IsOnScreen;
        partial void OnIsOnScreenChanging(global::System.Boolean value);
        partial void OnIsOnScreenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Participant", "Participant")]
        public Participant Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "Participant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "Participant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Participant> ParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Participant>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Participant", "Participant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitlesModel1", "TitleParticipant_FK_TitleParticipant_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TitlesModel1.TitleParticipant_FK_TitleParticipant_Title", "Title", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
